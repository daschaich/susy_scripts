#!/bin/bash

if [ $# -lt 1 ]; then
  echo "Usage: $0 <first>"
  exit 1
fi

# Input parameters
first=$1
if [ $# -gt 1 ]; then
  last=$2
  time=24:00:00
else
  last=$1
  time=04:00:00
fi

# Adjustable parameters
node=1
cpus=32
L=16
Nt=16
lambda=5.0
bmass=0.22
fmass=0.0
kappa=0.0
G=0.05
B=0.0
Ntraj=10
traj_length=1
skip=10   # !!! Should be a way to figure out skip=Ntraj*traj_length
Nvec=12

# Common parameters for all jobs
tag=l${lambda}_b${bmass}_G$G
echo "#!/bin/sh" > temp
echo "#SBATCH --nodes=$node" >> temp
echo "#SBATCH --ntasks-per-node=32" >> temp
echo "#SBATCH --time=$time" >> temp
echo "#SBATCH -A latticesusy" >> temp
echo "#SBATCH --partition ds" >> temp
echo "#SBATCH -J eig${L}nt${Nt}_$tag" >> temp
echo "#SBATCH -o out.eig.%j" >> temp

dir=/lqcdproj/latticesusy/N4/APBC/Nc2_${L}nt${Nt}/$tag
bin=/lqcdproj/latticesusy/N4/code/4dSYM/bins/susy_eig
cd $dir
echo "cd $dir" >> temp

# Write all evolution tasks to run in a single job
iter=0
for(( i=$first ; $i<=$last ; i+=$skip )); do
  iter=$[$iter + 1]
  out=$dir/Out/eig.$i
  lat=$dir/Configs/gauge
  if [ -f $out ]; then
    echo "ERROR: OUTPUT FILE $out EXISTS, SUBMISSION ABORTED"
    rm -f temp
    exit 1
  fi
  if [ ! -f $lat.$i ]; then
    echo "ERROR: LATTICE $lat.$i NOT FOUND, SUBMISSION ABORTED"
    rm -f temp
    exit 1
  fi

  echo "echo \"Job \$SLURM_JOB_NAME started \"\`date\`\" jobid \$SLURM_JOB_ID\" >> $out" >> temp
  echo "echo \"=== Running MPI application on $cpus cpus ===\" >> $out" >> temp
  echo "echo \"srun -n $cpus $bin\" >> $out" >> temp
  echo "srun -n $cpus $bin << EOF >> $out" >> temp
  echo "prompt 0" >> temp
  echo "nx $L" >> temp
  echo "ny $L" >> temp
  echo "nz $L" >> temp
  echo "nt $Nt" >> temp
  echo "PBC -1" >> temp

  echo "iseed ${last}41$i" >> temp
  echo "Nroot 1" >> temp
  echo "Norder 1" >> temp

  echo "warms 0" >> temp
  echo "trajecs $Ntraj" >> temp
  echo "traj_length $traj_length" >> temp
  echo "nstep 1" >> temp
  echo "nstep_gauge 1" >> temp
  echo "traj_between_meas $Ntraj" >> temp

  echo "lambda $lambda" >> temp
  echo "kappa_u1 $kappa" >> temp
  echo "bmass $bmass" >> temp
  echo "fmass $fmass" >> temp
  echo "G $G" >> temp
  echo "B $B" >> temp

  echo "max_cg_iterations 5000" >> temp
  echo "error_per_site 1e-5" >> temp

  echo "Nvec $Nvec" >> temp
  echo "eig_tol 1e-12" >> temp
  echo "maxIter 999999" >> temp

  echo "reload_serial $lat.$i" >> temp
  echo "forget" >> temp
  echo "EOF" >> temp
  echo "echo \"=== MPI application finished at \"\`date\`\" ===\" >> $out" >> temp
  echo "" >> temp
done

sbatch temp
echo "Requested $time to run $iter eigenvalue measurements ($first through $last by $skip)"
rm -f temp
